"use strict";var ApplicationConfiguration=function(){var applicationModuleName="norisk",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0)}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("categorias"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("empresas"),ApplicationConfiguration.registerModule("productos"),ApplicationConfiguration.registerModule("users"),angular.module("categorias").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Categorias","categorias","dropdown","/categorias(/create)?"),Menus.addSubMenuItem("topbar","categorias","Categorias","categorias"),Menus.addSubMenuItem("topbar","categorias","Nueva Categoria","categorias/create")}]),angular.module("categorias").config(["$stateProvider",function($stateProvider){$stateProvider.state("categorias",{url:"/view-categorias",templateUrl:"modules/categorias/views/categorias.client.view.html"}).state("create-categoria",{url:"/categorias/create",templateUrl:"modules/categorias/views/create-categoria.client.view.html"}).state("view-categoria",{url:"/view-categorias/:categoriaId",templateUrl:"modules/categorias/views/view-categoria.client.view.html"}).state("edit-categoria",{url:"/categorias/:categoriaId/edit",templateUrl:"modules/categorias/views/edit-categoria.client.view.html"})}]),angular.module("categorias").controller("CategoriasController",["$scope","$stateParams","$location","Authentication","Categorias","Productos","$filter",function($scope,$stateParams,$location,Authentication,Categorias,Productos,$filter){$scope.authentication=Authentication,$scope.productos=Productos.query(),$scope.currentPage=1,$scope.pageSize=10,$scope.offset=0,$scope.mostrar=!1,$scope.pageChanged=function(){$scope.offset=($scope.currentPage-1)*$scope.pageSize},$scope.create=function(){var categoria=new Categorias({categoria:this.categoria,nombre:this.nombre,descripcion:this.descripcion});categoria.$save(function(response){$location.path("categorias/"+response._id),$scope.nombre=""},function(errorResponse){$scope.error=errorResponse.data.message}),toast("Categoría creada")},$scope.remove=function(categoria){if(categoria){categoria.$remove();for(var i in $scope.categorias)$scope.categorias[i]===categoria&&$scope.categorias.splice(i,1)}else $scope.categoria.$remove(function(){$location.path("categorias")});toast("Categoría eliminada")},$scope.update=function(){var categoria=$scope.categoria;categoria.$update(function(){$location.path("categorias/"+categoria._id)},function(errorResponse){$scope.error=errorResponse.data.message}),toast("Categoría actualizada")},$scope.find=function(){$scope.categorias=Categorias.query()},$scope.findOne=function(){$scope.categoria=Categorias.get({categoriaId:$stateParams.categoriaId})},$scope.categoriaSearch=function(producto){$location.path("categorias/"+producto._id)},$scope.listarProductos=function(categoria){$location.path("/view-categorias/"+categoria._id)},$scope.mostrar=function(){$scope.mostrar=!$scope.mostrar};var toast=function(msje){toastr.options={closeButton:!0,progressBar:!0,timeOut:"3000",extendedTimeOut:"1000"},toastr.success(msje)}}]),angular.module("categorias").directive("carta",function(){return{restrict:"E",templateUrl:"modules/categorias/directives/carta.html"}}),angular.module("categorias").factory("Categorias",["$resource",function($resource){return $resource("categorias/:categoriaId",{categoriaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("presupuesto",{url:"/presupuesto",templateUrl:"modules/productos/views/productos.pedido.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){function icono_cross(){isClosed===!0?(overlay.hide(),trigger.removeClass("is-open"),trigger.addClass("is-closed"),isClosed=!1):(overlay.show(),trigger.removeClass("is-closed"),trigger.addClass("is-open"),isClosed=!0)}$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar");var trigger=$(".icono"),overlay=$(".overlay"),isClosed=!1;$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$('[data-toggle="offcanvas"]').click(function(){$("#wrapper").toggleClass("toggled"),icono_cross()})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("empresas").run(["Menus",function(Menus){}]),angular.module("empresas").config(["$stateProvider",function($stateProvider){$stateProvider.state("empresas",{url:"/la-empresa",templateUrl:"modules/empresas/views/empresas.client.view.html"}).state("create-empresa",{url:"/empresas/create",templateUrl:"modules/empresas/views/create-empresa.client.view.html"}).state("view-empresa",{url:"/empresas/:empresaId",templateUrl:"modules/empresas/views/view-empresa.client.view.html"}).state("contacto",{url:"/contacto",templateUrl:"modules/empresas/views/contacto-empresa.client.view.html"}).state("edit-empresa",{url:"/empresas/:empresaId/edit",templateUrl:"modules/empresas/views/edit-empresa.client.view.html"})}]),angular.module("empresas").controller("EmpresasController",["$scope","$stateParams","$location","Authentication","Empresas","$http",function($scope,$stateParams,$location,Authentication,Empresas,$http){$scope.authentication=Authentication,$scope.currentPage=1,$scope.pageSize=10,$scope.offset=0,$scope.pageChanged=function(){$scope.offset=($scope.currentPage-1)*$scope.pageSize},$scope.create=function(){var empresa=new Empresas({nombre:this.nombre,descripcion:this.descripcion,eslogan:this.eslogan});empresa.$save(function(response){$location.path("la-empresa/"+response._id),$scope.nombre=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(empresa){if(empresa){empresa.$remove();for(var i in $scope.empresas)$scope.empresas[i]===empresa&&$scope.empresas.splice(i,1)}else $scope.empresa.$remove(function(){$location.path("la-empresa")})},$scope.update=function(){var empresa=$scope.empresa;empresa.$update(function(){$location.path("la-empresa")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.empresas=Empresas.query()},$scope.findOne=function(){$scope.empresa=Empresas.get({empresaId:$stateParams.empresaId})},$scope.empresaSearch=function(empresa){$location.path("empresas/"+empresa._id)},$scope.sendMail=function(){var data={contactoNombre:this.contactoNombre,contactoEmail:this.contactoEmail,contactoTelefono:this.contactoTelefono,contactoConsulta:this.contactoConsulta};$http({method:"POST",url:"/contacto",data:data}).then(function(response){console.log("Se envió correctamente la consulta"),toastr.options={closeButton:!0,progressBar:!0,timeOut:"3000",extendedTimeOut:"1000"},toastr.success("Consulta enviada, muchas gracias!"),$location.path("/")},function(response){console.log("No se ha enviado la consulta")})}}]),angular.module("empresas").factory("Empresas",["$resource",function($resource){return $resource("empresas/:empresaId",{empresaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("productos").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Productos","productos","dropdown","/productos(/create)?"),Menus.addSubMenuItem("topbar","productos","Lista de Productos","productos"),Menus.addSubMenuItem("topbar","productos","Nuevo Producto","productos/create")}]),angular.module("productos").config(["$stateProvider",function($stateProvider){$stateProvider.state("productos",{url:"/productos",templateUrl:"modules/productos/views/productos.client.view.html"}).state("create-producto",{url:"/productos/create",templateUrl:"modules/productos/views/create-producto.client.view.html"}).state("view-producto",{url:"/productos/:productoId",templateUrl:"modules/productos/views/view-producto.client.view.html"}).state("edit-producto",{url:"/productos/:productoId/edit",templateUrl:"modules/productos/views/edit-producto.client.view.html"})}]),angular.module("productos").controller("ProductosController",["$scope","$stateParams","$location","Authentication","Productos","Categorias","$filter",function($scope,$stateParams,$location,Authentication,Productos,Categorias,$filter){$scope.authentication=Authentication,$scope.categorias=Categorias.query(),$scope.currentPage=1,$scope.pageSize=10,$scope.offset=0,$scope.pageChanged=function(){$scope.offset=($scope.currentPage-1)*$scope.pageSize},$scope.create=function(){var producto=new Productos({nombre:this.nombre,categoria:this.categoria,codigo:this.codigo,descripcion:this.descripcion,reflectivos:this.reflectivos,altura:this.altura,base:this.base,peso:this.peso,colores:this.colores,foto:this.foto});producto.$save(function(response){$location.path("productos/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(producto){if(producto){producto.$remove();for(var i in $scope.productos)$scope.productos[i]===producto&&$scope.productos.splice(i,1)}else $scope.producto.$remove(function(){$location.path("productos")});toast("Producto eliminado")},$scope.update=function(){var producto=$scope.producto;producto.categoria=producto.categoria._id,producto.$update(function(){$location.path("productos/"+producto._id)},function(errorResponse){$scope.error=errorResponse.data.message}),toast("Producto actualizado")};var appendCategory=function(p){p.categoria=$filter("filter")($scope.categorias,{_id:p.categoria})[0]};$scope.find=function(){Productos.query(function(productos){productos.forEach(appendCategory),$scope.productos=productos})},$scope.findOne=function(){$scope.producto=Productos.get({productoId:$stateParams.productoId},appendCategory)},$scope.productoSearch=function(producto){$location.path("productos/"+producto._id)},$scope.mostrar=function(){$scope.mostrar=!$scope.mostrar};var toast=function(msje){toastr.options={closeButton:!0,progressBar:!0,timeOut:"3000",extendedTimeOut:"1000"},toastr.success(msje)}}]),angular.module("productos").controller("PedidoController",["PedidoService","$scope","$http","$location",function(PedidoService,$scope,$http,$location){$scope.Pedidos=PedidoService.pedido,$scope.agregarPedido=function(nombre,cantidad){PedidoService.existeProducto(nombre)?(PedidoService.eliminarProducto(nombre),PedidoService.agregarProducto(nombre,cantidad)):PedidoService.agregarProducto(nombre,cantidad),toastr.options={closeButton:!0,progressBar:!0,timeOut:"3000",extendedTimeOut:"1000"},toastr.success("Producto agregado")},$scope.editarProducto=function(nombre,cantidad){cantidad&&PedidoService.editarProducto(nombre,cantidad)},$scope.eliminarProducto=function(nombre){PedidoService.eliminarProducto(nombre)},$scope.$watch("pedido",function(){PedidoService.pedido=$scope.Pedidos}),$scope.sendMail=function(){var data={contactoNombre:this.contactoNombre,contactoEmail:this.contactoEmail,contactoTelefono:this.contactoTelefono,pedido:$scope.Pedidos};console.log("Enviando Mail"),$http({method:"POST",url:"/presupuesto",data:data}).then(function(response){console.log("Se envió correctamente el presupuesto"),toastr.options={closeButton:!0,progressBar:!0,timeOut:"3000",extendedTimeOut:"1000"},toastr.success("Pedido enviado"),PedidoService.limpiarPedido(),$location.path("/")},function(response){console.log("No se ha enviado el presupuesto")})}}]),angular.module("productos").directive("producto",function(){return{restrict:"E",templateUrl:"modules/productos/directives/producto.html"}}),angular.module("productos").service("PedidoService",function(){this.pedido=[],this.agregarProducto=function(nombre,cantidad){this.pedido.push({producto:nombre,cantidad:cantidad})},this.eliminarProducto=function(producto){for(var i in this.pedido)this.pedido[i].producto===producto&&(console.log(i),this.pedido.splice(i,1))},this.editarProducto=function(producto,cantidad){$.each(this.pedido,function(){this.producto===producto&&(this.cantidad=cantidad)})},this.limpiarPedido=function(){this.pedido=[]},this.existeProducto=function(producto){return $.each(this.pedido,function(){return this.producto===producto?!0:void 0}),!1}}),angular.module("productos").factory("Productos",["$resource",function($resource){return $resource("productos/:productoId",{productoId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("/");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);